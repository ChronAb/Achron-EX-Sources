// Copyright (C) 2002-2011 Hazardous Software Inc.  See EULA for license information.


//clear rally point for factory building

#include common/include/unit_common_header.aih

PERFORM SET_PARAM $INVALID_POSITION;
//$SAY_CONGREGATE_OFF

int uclass = unit->Class;
//one of the factory+upgrade buildings
if (uclass==$ARMORY_CLASS || uclass==$ANNEX_CLASS) {
	int ua = unit->Action;
	//this building is in the middle of an upgrade, return to the upgrade objective
	if (uclass==$ANNEX_CLASS && ua==$ACTION_RESEARCH_U6) { PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE6; PERFORM NOTHING;}
	if (ua>=$ACTION_RESEARCH_U1 && ua<=$ACTION_RESEARCH_U5) {
		if (ua==$ACTION_RESEARCH_U1) { PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE1; }
		else if (ua==$ACTION_RESEARCH_U2) { PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE2; }
		else if (ua==$ACTION_RESEARCH_U3) { PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE3; }
		else if (ua==$ACTION_RESEARCH_U4) { PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE4; }
		else if (ua==$ACTION_RESEARCH_U5) { PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE5; }
		PERFORM NOTHING;
	}
}

if ($IS_GREKIM) { //grekim
	/*
	int urank = unit.Rank;
	while (1) { //clear congretaion point for all other progen units in the area
		target = QUERY UNIT [unit] MIN [query<_>unit] WHERE [ query->IsAlly==1 && urank==query.Rank && query->ObjectiveParameters!=$INVALID_POSITION ];
		if (target->IsAlive==1) {
			PERFORM SET_OTHER_OBJECTIVE_PARAMS $INVALID_POSITION;
			PERFORM SET_OTHER_OBJECTIVE $OBJ_BLDG_CLEAR_CONGREGATE;
		} else { break; }
	}
	*/
	PERFORM $ACTION_CHANGE_COMMANDER 0; 
	PERFORM SET_OBJECTIVE 0;
	PERFORM NOTHING;
} 

if (unit->Energy>0) { //has troops to deploy
	PERFORM SET_OBJECTIVE $OBJ_BLDG_DEPLOY;
}
else {
	PERFORM SET_OBJECTIVE 0;
}


